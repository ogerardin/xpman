<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.ogerardin.xplane</groupId>
        <artifactId>xpman</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>xpman-fx-dist</artifactId>
    <packaging>jar</packaging>
    <description>
        This module packages the app in forms suitable for distribution.
    </description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <app.mainClass>com.ogerardin.xpman.XPmanFX</app.mainClass>
        <app.runnableJar>${project.build.finalName}-repackaged.jar</app.runnableJar>
        <app.runnableMainClass>org.springframework.boot.loader.JarLauncher</app.runnableMainClass>
        <app.copyright>(c) Olivier Gérardin 2022</app.copyright>
        <app.vendor>Olivier Gérardin</app.vendor>
        <app.name>X-Plane Manager</app.name>
        <app.shortName>xpman</app.shortName>
        <app.description>Configuration Manager for Laminar Research X-Plane</app.description>
        <!--Default when not available from git-commit-id-maven-plugin-->
        <git.build.number>0</git.build.number>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.ogerardin.xplane</groupId>
            <artifactId>xpman-fx</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>2.3.0.RELEASE</version>
                </plugin>
                <plugin>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>3.2.3</version>
                </plugin>
                <plugin>
                    <groupId>com.zenjava</groupId>
                    <artifactId>javafx-maven-plugin</artifactId>
                    <version>8.8.3</version>
                </plugin>
                <plugin>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <plugin>
                    <groupId>com.akathist.maven.plugins.launch4j</groupId>
                    <artifactId>launch4j-maven-plugin</artifactId>
                    <version>1.7.25</version>
                </plugin>
                <plugin>
                    <groupId>io.github.fvarrui</groupId>
                    <artifactId>javapackager</artifactId>
                    <version>1.6.3</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>

            <!--Extracts icon.png from the xpman-fx dependency-->
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.2</version>
                <executions>
                    <execution>
                        <id>extract-icon</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.ogerardin.xplane</groupId>
                                    <artifactId>xpman-fx</artifactId>
                                    <version>1.0-SNAPSHOT</version>
                                    <type>jar</type>
                                    <includes>img/icon.png</includes>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Generates an uber-jar by method of repackaging using Spring's spring-boot-maven-plugin.
                Much cleaner than shading, the dependencies are not unpacked and merged, but embedded as is, and
                a custom classloader takes care of accessing them. -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-repackaged-jar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <!-- <finalName>XPman-${project.version}</finalName> -->
                            <mainClass>${app.mainClass}</mainClass>
                            <classifier>repackaged</classifier>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--Extracts version components into properties "parsedVersion.*"-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>parse-version</id>
                        <goals>
                            <goal>parse-version</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <profiles>

        <!-- This profile generates a macOS app with bundled JRE, a pkg installer and a dmg image
            for drag-and-drop installation -->
        <profile>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
            <id>fvarrui-javapackager-mac</id>
            <build>
                <plugins>
                    <!--Convert PNG icon (extracted from xpman-fx) to .icns format
                        Uses sips which is a macOS native command-->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>convert-icon-to-icns</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>sips</executable>
                                    <arguments>
                                        <argument>-s</argument>
                                        <argument>format</argument>
                                        <argument>icns</argument>
                                        <argument>${project.build.directory}/img/icon.png</argument>
                                        <argument>--out</argument>
                                        <argument>${project.build.directory}/img/icon.icns</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>io.github.fvarrui</groupId>
                        <artifactId>javapackager</artifactId>
                        <executions>
                            <execution>
                                <id>package-for-mac</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>package</goal>
                                </goals>
                                <configuration>
                                    <description>${app.description}</description>
                                    <displayName>${app.name}</displayName>
                                    <name>${app.name}</name>
                                    <organizationName>${app.copyright}</organizationName>
                                    <licenseFile>../LICENSE</licenseFile>
                                    <mainClass>${app.runnableMainClass}</mainClass>
                                    <runnableJar>${project.build.directory}/${app.runnableJar}</runnableJar>
                                    <copyDependencies>false</copyDependencies>
                                    <additionalResources>
                                        <additionalResource>${project.basedir}/${app.name}.l4j.ini</additionalResource>
                                    </additionalResources>
<!--                                    <jrePath>${java.home}</jrePath>-->
                                    <bundleJre>true</bundleJre>
                                    <customizedJre>false</customizedJre>
                                    <generateInstaller>true</generateInstaller>
                                    <macConfig>
                                        <icnsFile>${project.build.directory}/img/icon.icns</icnsFile>
                                        <generateDmg>true</generateDmg>
                                        <generatePkg>true</generatePkg>
                                    </macConfig>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- This profile generates a Windows installer and a MSI file. Requires Inno-setup and Wix toolset. -->
        <profile>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <id>fvarrui-javapackager-win</id>
            <build>
                <plugins>
                    <!--Convert PNG icon (extracted from xpman-fx) to .ico format
                        Requires: imagemagick -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>convert-icon-to-ico</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>magick</executable>
                                    <arguments>
                                        <argument>convert</argument>
                                        <argument>${project.build.directory}/img/icon.png</argument>
                                        <argument>-define</argument>
                                        <argument>icon:auto-resize=256,128,96,64,48,32,24,16</argument>
                                        <argument>${project.build.directory}/img/icon.ico</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>com.github.ekryd.echo-maven-plugin</groupId>
                        <artifactId>echo-maven-plugin</artifactId>
                        <version>1.3.2</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>echo</goal>
                                </goals>
                                <configuration>
                                    <!--suppress MavenModelInspection -->
                                    <message>Windows version will be: ${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.${git.build.number}</message>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>io.github.fvarrui</groupId>
                        <artifactId>javapackager</artifactId>
                        <executions>
                            <execution>
                                <id>package-for-windows</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>package</goal>
                                </goals>
                                <configuration>
                                    <description>${app.description}</description>
                                    <displayName>${app.name}</displayName>
                                    <name>${app.name}</name>
                                    <organizationName>${app.copyright}</organizationName>
                                    <licenseFile>../LICENSE</licenseFile>
                                    <mainClass>${app.runnableMainClass}</mainClass>
                                    <runnableJar>${project.build.directory}/${app.runnableJar}</runnableJar>
                                    <copyDependencies>false</copyDependencies>
                                    <additionalResources>
                                        <additionalResource>${project.basedir}/${app.name}.l4j.ini</additionalResource>
                                    </additionalResources>
                                    <bundleJre>true</bundleJre>
<!--                                    <jrePath>${java.home}</jrePath>-->
                                    <customizedJre>false</customizedJre>
                                    <generateInstaller>true</generateInstaller>
                                    <winConfig>
                                        <icoFile>${project.build.directory}/img/icon.ico</icoFile>
                                        <generateSetup>true</generateSetup>
                                        <generateMsi>true</generateMsi>
                                        <generateMsm>false</generateMsm>
                                        <!--suppress MavenModelInspection -->
                                        <fileVersion>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.${git.build.number}</fileVersion>
                                        <txtFileVersion>${project.version}</txtFileVersion>
                                        <fileDescription>${app.description}</fileDescription>
                                        <copyright>${app.copyright}</copyright>
                                        <!--suppress MavenModelInspection -->
                                        <productVersion>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.${git.build.number}</productVersion>
                                        <txtProductVersion>${project.version}</txtProductVersion>
                                        <productName>${app.name}</productName>
                                        <internalName>xpman</internalName>
                                        <originalFilename>${app.name}.exe</originalFilename>
                                    </winConfig>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- This profile generates a Linux launcher with bundled JRE, a deb package and a rpm package. -->
        <profile>
            <activation>
                <os>
                    <family>linux</family>
                </os>
            </activation>
            <id>fvarrui-javapackager-linux</id>
            <build>
                <plugins>
                    <!-- rpm doesn't allow '-' in the version so we replace it with '_' -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sanitize-version</id>
                                <goals>
                                    <goal>regex-property</goal>
                                </goals>
                                <configuration>
                                    <name>sanitizedVersion</name>
                                    <value>${project.version}</value>
                                    <regex>-</regex>
                                    <replacement>_</replacement>
                                    <failIfNoMatch>false</failIfNoMatch>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>io.github.fvarrui</groupId>
                        <artifactId>javapackager</artifactId>
                        <executions>
                            <execution>
                                <id>package-for-linux</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>package</goal>
                                </goals>
                                <configuration>
                                    <description>${app.description}</description>
                                    <displayName>${app.name}</displayName>
                                    <name>${app.shortName}</name>
                                    <organizationName>${app.copyright}</organizationName>
                                    <licenseFile>../LICENSE</licenseFile>
                                    <!--suppress MavenModelInspection -->
                                    <version>${sanitizedVersion}</version>
                                    <mainClass>${app.runnableMainClass}</mainClass>
                                    <runnableJar>${project.build.directory}/${app.runnableJar}</runnableJar>
                                    <copyDependencies>false</copyDependencies>
                                    <additionalResources>
                                        <additionalResource>${project.basedir}/${app.shortName}.l4j.ini</additionalResource>
                                    </additionalResources>
                                    <bundleJre>true</bundleJre>
<!--                                    <jrePath>${java.home}</jrePath>-->
                                    <customizedJre>false</customizedJre>
                                    <generateInstaller>true</generateInstaller>
                                    <linuxConfig>
                                        <pngFile>${project.build.directory}/img/icon.png</pngFile>
                                        <generateDeb>true</generateDeb>
                                        <generateRpm>true</generateRpm>
                                    </linuxConfig>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>

</project>